{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id != action.payload);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    clearItem(state) {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItem,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","removeItem","filter","minusItem","clearItem","actions","reducer"],"sources":["D:/react/my-app/src/redux/slices/cartSlice.js"],"sourcesContent":["import {createSlice, current} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    totalPrice: 0,\r\n    items: []\r\n\r\n}\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState,\r\n    reducers:{\r\n        addItem(state,action){\r\n           const findItem= state.items.find((obj)=>obj.id === action.payload.id);\r\n           if(findItem){\r\n            findItem.count++;\r\n           }\r\n           else{\r\n            state.items.push({\r\n                ...action.payload,\r\n                count: 1,\r\n            });\r\n           }\r\n           \r\n            state.totalPrice=state.items.reduce((sum,obj)=>{return (obj.price*obj.count) + sum },0);\r\n           \r\n        },\r\n        removeItem(state,action){\r\n            state.items = state.items.filter(obj=>obj.id != action.payload);\r\n        },\r\n        minusItem(state,action){\r\n            const findItem= state.items.find((obj)=>obj.id === action.payload.id);\r\n            if (findItem){\r\n                findItem.count--;\r\n            }\r\n        },\r\n        clearItem(state){\r\n            state.items=[];\r\n        },\r\n        \r\n    }\r\n});\r\nexport const {addItem,removeItem,clearItem,minusItem}=cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,OAAO,QAAO,kBAAkB;AAErD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AAEX,CAAC;AACD,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAC,MAAM;EACXJ,YAAY;EACZK,QAAQ,EAAC;IACLC,OAAOA,CAACC,KAAK,EAACC,MAAM,EAAC;MAClB,MAAMC,QAAQ,GAAEF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACrE,IAAGH,QAAQ,EAAC;QACXA,QAAQ,CAACK,KAAK,EAAE;MACjB,CAAC,MACG;QACHP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACb,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACX,CAAC,CAAC;MACH;MAECP,KAAK,CAACN,UAAU,GAACM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAACN,GAAG,KAAG;QAAC,OAAQA,GAAG,CAACO,KAAK,GAACP,GAAG,CAACG,KAAK,GAAIG,GAAG;MAAC,CAAC,EAAC,CAAC,CAAC;IAE3F,CAAC;IACDE,UAAUA,CAACZ,KAAK,EAACC,MAAM,EAAC;MACpBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAACT,GAAG,IAAEA,GAAG,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAAC;IACnE,CAAC;IACDQ,SAASA,CAACd,KAAK,EAACC,MAAM,EAAC;MACnB,MAAMC,QAAQ,GAAEF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACrE,IAAIH,QAAQ,EAAC;QACTA,QAAQ,CAACK,KAAK,EAAE;MACpB;IACJ,CAAC;IACDQ,SAASA,CAACf,KAAK,EAAC;MACZA,KAAK,CAACL,KAAK,GAAC,EAAE;IAClB;EAEJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACI,OAAO;EAACa,UAAU;EAACG,SAAS;EAACD;AAAS,CAAC,GAAClB,SAAS,CAACoB,OAAO;AAEvE,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}